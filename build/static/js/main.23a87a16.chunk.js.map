{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","components/Scroll.js","containers/App.jsx","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","App","useState","robot","setRobot","filteredRobot","setFilteredRobot","searchField","setSearchField","useEffect","a","fetch","response","json","users","getData","filterRobots","filteredRobots","filter","currentRobot","console","log","toLowerCase","includes","length","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,yBAAKC,UAAU,oDACb,yBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,6BACE,4BAAKC,GACL,2BAAIC,MCGGI,EARE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACf,oCACGA,EAAOC,KAAI,SAACC,EAAMC,GAAP,OACV,kBAAC,EAAD,CAAMC,IAAKF,EAAKT,GAAIA,GAAIS,EAAKT,GAAIC,KAAMQ,EAAKR,KAAMC,MAAOO,EAAKP,aCSrDU,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,yBAAKV,UAAU,OACb,2BACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCHI,G,MARA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,yBACEC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAEhEJ,KCuEUK,EAvEH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAE0BF,mBAAS,IAFnC,mBAETG,EAFS,KAEMC,EAFN,OAGsBJ,mBAAS,IAH/B,mBAGTK,EAHS,KAGIC,EAHJ,KAKhBC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,8CADb,cACVC,EADU,gBAEIA,EAASC,OAFb,OAEVC,EAFU,OAGdV,EAASU,GACTR,EAAiBQ,GAJH,2CAAH,qDAObC,KAWC,IAEHN,qBAAU,WACRO,MACC,CAACT,IAEJ,IAaMS,EAAe,WACnB,IAAMC,EAAiBd,EAAMe,QAAO,SAACC,GAGnC,OAFAC,QAAQC,IAAIF,EAAaxC,KAAM4B,GAExBY,EAAaxC,KACjB2C,cACAC,SAAShB,EAAYe,kBAE1BhB,EAAiBW,IAKnB,OAFAG,QAAQC,IAAIlB,GAES,IAAjBA,EAAMqB,OACD,uCAIP,yBAAK3C,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWU,aAjCQ,SAACkC,GACtBjB,EAAeiB,EAAMC,OAAOC,UAiC1B,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAU1C,OAAQoB,OCjE1BuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.23a87a16.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => (\n  <>\n    {robots.map((user, i) => (\n      <Card key={user.id} id={user.id} name={user.name} email={user.email} />\n    ))}\n  </>\n);\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = ({ children }) => (\n  <div\n    style={{ overflowY: \"scroll\", border: \"5px solid black\", height: \"800px\" }}\n  >\n    {children}\n  </div>\n);\n\nexport default Scroll;\n","import React, { useEffect, useState } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../components/Scroll\";\n\nconst App = () => {\n  const [robot, setRobot] = useState([]);\n  const [filteredRobot, setFilteredRobot] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  useEffect(() => {\n    const getData = async () => {\n      let response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      let users = await response.json();\n      setRobot(users);\n      setFilteredRobot(users);\n    };\n\n    getData();\n\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    //   .then((response) => {\n    //     return response.json();\n    //   })\n    //   .then((users) => {\n    //     console.log(users);\n    //     setRobot(users);\n    //     setFilteredRobot(users);\n    //   });\n  }, []);\n\n  useEffect(() => {\n    filterRobots();\n  }, [searchField]);\n\n  const onSearchChange = (event) => {\n    setSearchField(event.target.value);\n    // setSearchField((state) => {\n    //   const filteredRobots = robots.filter((currentRobot) => {\n    //     console.log(currentRobot.name, searchField);\n    //\n    //     return currentRobot.name.toLowerCase().includes(state.toLowerCase());\n    //   });\n    //   setRobot(filteredRobots);\n    //   return state;\n    // });\n  };\n\n  const filterRobots = () => {\n    const filteredRobots = robot.filter((currentRobot) => {\n      console.log(currentRobot.name, searchField);\n\n      return currentRobot.name\n        .toLowerCase()\n        .includes(searchField.toLowerCase());\n    });\n    setFilteredRobot(filteredRobots);\n  };\n\n  console.log(robot);\n\n  if (robot.length === 0) {\n    return <h1>Loading</h1>;\n  }\n\n  return (\n    <div className=\"tc\">\n      <h1 className=\"f1\">RoboFriends</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <CardList robots={filteredRobot} />\n      </Scroll>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"tachyons\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}